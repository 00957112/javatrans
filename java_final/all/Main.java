import com.github.kwhat.jnativehook.GlobalScreen;
import com.github.kwhat.jnativehook.NativeHookException;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.*;
import java.awt.Color;
import javax.swing.*;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Formatter;
import java.nio.file.Paths;
import java.util.Scanner;
import net.sf.json.*;
public class Main extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form Main
     */
    public static JButton b1;
    private static Formatter  output;
    private static FileWriter fw;
    private static Scanner input;
    public static String readstr;
    String ans="";
    public Main() {

        super("類即時翻譯器");
        readfileopen("translation.txt");
        wfileopen("translation.txt");
        //System.out.println(readstr);
        if(readstr==null) addtext("{\"data\":{\"pages\":[]},\"errcode\":0}");
        wclosefile();
        readfileopen("vocabulary.txt");
        wfileopen("vocabulary.txt");
        if(readstr==null) addtext("{\"data\":{\"pages\":[]},\"errcode\":0}");
        wclosefile();
        initComponents();
        panel.setBackground(new Color(255, 255, 255));
        //ClipboardFrame test=new ClipboardFrame();
        GlobalTips ma = new GlobalTips();
        ClipboardFrame test=new ClipboardFrame();
        test.start();
        switchButton2.addEventSelected(new EventSwitchSelected() {
            @Override
            public void onSelected(boolean selected) {
                if (selected) {
                    //放選之後要發生的事件
                    test.close();
                    ma.start();
                    panel.setBackground(new Color(255, 255, 255));//這是原本設置選後要改變的背景顏色
                    //JOptionPane.showMessageDialog(null,"No, it cannot be larger!");
                } else {
                    ma.close();

                    test.start();
                    panel.setBackground(new Color(255, 255, 255));//不選後要變成的背景顏色
                }
            }
        });

        //全域按鍵註冊（必放一個
        try {
            GlobalScreen.registerNativeHook();
        }
        catch (NativeHookException ex) {
            System.err.println("There was a problem registering the native hook.");
            System.err.println(ex.getMessage());
            System.exit(1);
        }
        //////////////
    }
    @Override
    public void actionPerformed(ActionEvent e)
    {
        if (e.getActionCommand().equals("查詢紀錄")) {
            readfileopen("translation.txt");
            JSONObject string_to_json
                    =JSONObject.fromObject(readstr);
            //System.out.println(string_to_json);
            JSONObject json_to_data
                    = string_to_json.getJSONObject("data");//data層
            //System.out.println(json_to_data);
            JSONArray json_to_strings = json_to_data.getJSONArray("pages");//page Array層
            for (Object object : json_to_strings) {//讀
                JSONObject json_to_string = JSONObject.fromObject(object);
                json_to_string.get("pages");
                ans+=json_to_string.get("date")+"\n"+json_to_string.get("eg")+"\n"+json_to_string.get("ch")+'\n'+'\n';
            }
            ans+="--------------------------------------------------------------------------------------------------------------------------------------------\n";
            readfileopen("vocabulary.txt");
            string_to_json
                    =JSONObject.fromObject(readstr);
            //System.out.println(string_to_json);
            json_to_data
                    = string_to_json.getJSONObject("data");//data層
            //System.out.println(json_to_data);
            json_to_strings = json_to_data.getJSONArray("pages");//page Array層
            for (Object object : json_to_strings) {//讀
                JSONObject json_to_string = JSONObject.fromObject(object);
                json_to_string.get("pages");
                ans+=json_to_string.get("date")+"\n"+json_to_string.get("eg")+"\n"+json_to_string.get("ch")+'\n'+'\n';
            }

            if(ans!="")
            {
                RFrame fr = new RFrame(ans);
                fr.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                fr.setSize(700, 500);
                fr.setVisible(true);
            }
            else JOptionPane.showMessageDialog(null, "還沒有查詢紀錄",
                    "Message!", JOptionPane.PLAIN_MESSAGE);
            //把顯示紀錄的東東放這裡
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        switchButton2 = new switchbutton();
        b1=new JButton("查詢紀錄");
        b1.addActionListener(this);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        JTextArea text2=new JTextArea();
        text2.setFont(new Font("Serif", Font.PLAIN, 14));
        text2.setEnabled(false);
        text2.setBackground(Color.WHITE);
        String s="歡迎來到類即時翻譯器~此翻譯器有兩種模式!\n打開開關即為翻譯模式\n" +
                "關閉開關即為單字模式\n點擊查詢紀錄可查看先前翻譯的結果\n" +
                "翻譯模式:選取要翻譯的文字區段,按住3秒即可\n"+
                "單字模式:選取想要查詢得單字,按住3秒即可\n"+
                "若無法選取完後再次點擊,按下ctrl+c也可達到一樣的效果\n"+
                "若想把顯示框關閉,點擊顯示框外的任一地方即可";
        text2.setText(s);
        JPanel p1=new JPanel();
        JPanel p2=new JPanel();
        p1.add(text2);
        p1.add(b1);
        p1.add(switchButton2);
        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
                panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)//做起來像是調整框的水平大小
                                //.addComponent(text2,javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(p1,javax.swing.GroupLayout.PREFERRED_SIZE,  javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                //.addComponent(switchButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(0, Short.MAX_VALUE))//離容器邊界的距離??
        );
        panelLayout.setVerticalGroup(
                panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)//做起來像是調整框的垂直大小
                                //.addComponent(text2,javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(p1,javax.swing.GroupLayout.PREFERRED_SIZE,  javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                //.addComponent(switchButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(0, Short.MAX_VALUE))//離容器邊界的距離??
        );
        //panelLayout.setAutoCreateContainerGaps(true);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    public static void wfileopen(String filename){//寫入開檔
        try {
            fw = new FileWriter(filename, true);
            output = new Formatter(fw);
        }
        catch(IOException e){
            System.out.println(e);
        }
    }
    public static void readfileopen(String filename){//讀
        try {
            input = new Scanner(Paths.get(filename));
            if(input.hasNext())
                readstr=input.nextLine();
        }
        catch(IOException e){
            System.out.println(e);
        }
        //input.next();//格式
        rclosefile();
    }
    public static void addtext(String context){//寫入
        //System.out.println("add\n"+context);
        output.format("%s",context);
    }

    public static void wclosefile(){//關閉寫入
        if (output != null)
            output.close();
    }

    public static void rclosefile(){//關閉讀出
        if (input != null)
            input.close();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel;
    private switchbutton switchButton2;
    // End of variables declaration//GEN-END:variables
}
